package com.java.ejb;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

import javax.faces.context.FacesContext;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

public class CustPolicyImpl {
	SessionFactory sf;
	Session session;
	
	â€ƒpublic String redirectToTakePolicy(int insId) {
		Map<String, Object> sessionMap = FacesContext.getCurrentInstance().getExternalContext().getSessionMap();
		sessionMap.put("insId", insId);
		return "takePolicy.jsp?faces-redirect=true";
	}
	
	public String addCustomerPolicy(CustPolicy custpolicy) {
		sf = SessionHelper.getConnection();
		Transaction trans = session.beginTransaction();
		
	}
	public String takePolicy(CustPolicy policyNew) {
		Map<String, Object> sessionMap = FacesContext.getCurrentInstance().getExternalContext().getSessionMap();
		String custIdStr = (String) sessionMap.get("loggedCustId");
		String insuranceIdStr = (String) sessionMap.get("insuranceId");
		int custId = Integer.parseInt(custIdStr);
		int insuranceId = Integer.parseInt(insuranceIdStr);
		policyNew.setCustId(custId);
		policyNew.setInsId(insuranceId);;
		String payMode = policyNew.getPaymode().toString();
		double insuranceAmount = policyNew.getInsAmount();
		double initialAmount = calculateInitialAmount(insuranceAmount, payMode);
		policyNew.setInitialAmount(initialAmount);
 
		Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = sdf.format(date);
        System.out.println("Current Date is : "+sdf.parse(formattedDate));
        policyNew.setRegdDate(sdf.parse(formattedDate));
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Transaction transaction = session.beginTransaction();
		session.save(policyNew);
		transaction.commit();
		CustomerImpl impl = new CustomerImpl();
		return "Policy Added";
	}

 
	double calculateInitialAmount(double insuranceAmount, String PayMode){
		if (PayMode.equals("MONTHLY")) {
			return insuranceAmount/12;
		}else if (PayMode.equals("QUARTERLY")) {
			return insuranceAmount/4;			
		}else if (PayMode.equals("HALFYEARLY")) {
			return insuranceAmount/2;			
		}else {
			return insuranceAmount;
		}
	}

}
